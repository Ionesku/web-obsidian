version: '3.8'

services:
  backend:
    build: ./backend
    container_name: obsidian-backend
    ports:
      - "8000:8000"
    volumes:
      - ./data:/data
    environment:
      - SECRET_KEY=${SECRET_KEY:-please-change-this-secret-key-in-production}
      - DATABASE_URL=sqlite:///data/app.db
      - VAULTS_ROOT=/data/vaults
      - INDEXES_ROOT=/data/indexes
      - CORS_ORIGINS=http://0.0.0.0:5173,http://0.0.0.0:80,http://0.0.0.0,http://obsidian-frontend,http://frontend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    container_name: obsidian-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Backup service
  backup:
    image: alpine:latest
    container_name: obsidian-backup
    volumes:
      - ./data:/data:ro
      - ./backups:/backups
    command: >
      sh -c '
        while true; do
          echo "Creating backup at $$(date)"
          tar -czf /backups/vault-backup-$$(date +%Y%m%d-%H%M%S).tar.gz -C /data .
          echo "Cleaning old backups (keeping last 30 days)"
          find /backups -name "vault-backup-*.tar.gz" -mtime +30 -delete
          echo "Next backup in 24 hours"
          sleep 86400
        done
      '
    restart: unless-stopped

volumes:
  data:
    driver: local

networks:
  default:
    name: obsidian-network
